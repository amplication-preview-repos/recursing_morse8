/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumFeaturesStatus } from "./EnumFeaturesStatus";
import { EnumFeaturesFeatureType } from "./EnumFeaturesFeatureType";
import { EnumFeaturesTypeField } from "./EnumFeaturesTypeField";

@InputType()
class FeaturesWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumFeaturesStatus,
  })
  @IsEnum(EnumFeaturesStatus)
  @IsOptional()
  @Field(() => EnumFeaturesStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumFeaturesFeatureType,
  })
  @IsEnum(EnumFeaturesFeatureType)
  @IsOptional()
  @Field(() => EnumFeaturesFeatureType, {
    nullable: true,
  })
  featureType?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumFeaturesTypeField,
  })
  @IsEnum(EnumFeaturesTypeField)
  @IsOptional()
  @Field(() => EnumFeaturesTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  relatedRelease?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  relatedTask?: StringNullableFilter;
}

export { FeaturesWhereInput as FeaturesWhereInput };
